# ------------------------------------------------------------------------------
# reverse_proxy/tasks/site/delete.yml
# ------------------------------------------------------------------------------

---

- ansible.builtin.set_fact: "wordpress_site_{{ item.key }}={{ item.value }}"
  loop: >-
    {{
      wordpress_sites | selectattr('subdomain', 'equalto', subdomain) |
      first | dict2items |
      union(
      wordpress_sites_private | selectattr('subdomain', 'equalto', subdomain) |
      first | dict2items)
    }}

- block:

    - name: Disable site in Nginx service
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/{{ wordpress_site_server_name }}.conf
        state: absent
      notify:
        - Nginx configuration changed

    - name: Make site unavailable in Nginx service
      ansible.builtin.file:
        path: /etc/nginx/sites-available/{{ wordpress_site_server_name }}.conf
        state: absent
      notify:
        - Nginx configuration changed

    - name: See if a certbot SSL certificate is installed for this site
      ansible.builtin.shell: >-
        certbot certificates |
        grep 'Certificate Name: {{ wordpress_site_server_name }}'
      register: certbot_cert
      changed_when: false
      failed_when: certbot_cert.rc !=0 and certbot_cert.rc != 1

    - name: >-
        If there is a certbot certificate installed for this WordPress site then
        delete it
      ansible.builtin.command: "\
        certbot -n --cert-name {{ wordpress_site_server_name }} delete"
      when: certbot_cert.rc == 0

    - name: >-
        If there is a self-signed certificate installed for this WordPress site
        then delete it
      ansible.builtin.file:
        path: >-
          /etc/ssl/certs/{{
          wordpress_site_server_name | replace('.', '_')
          }}.pem
        state: absent

  become: yes
  vars:
    wordpress_site_server_name: "\
      {{ wordpress_site_subdomain }}.{{ domain_name }}"
