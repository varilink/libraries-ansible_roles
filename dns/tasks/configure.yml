# dns/tasks/configure.yml

---

- block:

    - name: Template out upstream-resolv.conf
      ansible.builtin.template:
        src: upstream-resolv.conf.j2
        dest: /etc/upstream-resolv.conf

    - name: Set resolv-file to /etc/upstream-resolv.conf in /etc/dnsmasq.conf
      ansible.builtin.lineinfile:
        path: /etc/dnsmasq.conf
        regexp: '^#?resolv-file='
        line: resolv-file=/etc/upstream-resolv.conf
      notify:
        - Dnsmasq configuration changed

    - name: Enable expand-hosts in /etc/dnsmasq.conf
      ansible.builtin.lineinfile:
        path: /etc/dnsmasq.conf
        regexp: '^#?expand-hosts'
        line: expand-hosts
      notify:
        - Dnsmasq configuration changed

    - name: Enable read of additional hosts file in /etc/dnsmasq.conf
      ansible.builtin.lineinfile:
        path: /etc/dnsmasq.conf
        regexp: '^#?addn-hosts='
        line: addn-hosts=/etc/addn-hosts
      notify:
        - Dnsmasq configuration changed

    - name: Set domain to required value in /etc/dnsmasq.conf
      ansible.builtin.lineinfile:
        path: /etc/dnsmasq.conf
        regexp: "^#?domain=(?:thekelleys\\.org\\.uk|{{ home_domain }})"
        line: domain={{ home_domain }}
      notify:
        - Dnsmasq configuration changed

    - name: Copy skeleton addn-hosts file
      ansible.builtin.copy:
        content: |
          # Entries for hosts and services
          # BEGIN ANSIBLE MANAGED BLOCK
          # END ANSIBLE MANAGED BLOCK

          # Project entries
        dest: /etc/addn-hosts
        force: no

    - name: Gather IP addresses each DNS host pattern
      ansible.builtin.include_tasks: hosts-pattern.yml
      loop: "{{ dns_host_patterns }}"
      loop_control:
        loop_var: host_pattern

    - name: Template hosts and services lookups to addn-hosts
      ansible.builtin.blockinfile:
        path: /etc/addn-hosts
        block: >-
          {{
            lookup('ansible.builtin.template', './templates/addn-hosts.j2')
          }}

  become: yes
