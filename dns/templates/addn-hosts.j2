{% for pattern in dns_host_patterns %}
{# hosts pattern #}

# {{ pattern.description }}

{# for line feed #}

  {%-
    for hostname in
    (lookup('inventory_hostnames', pattern.string)).split(',') | sort
  %}
  {#- hostname in target DNS group #}

    {%-
      if hostvars[hostname].ansible_host is defined
      and hostvars[hostname].ansible_host | regex_search('^\w+$')
    %}

# {{ hostname }}
{{ hostvars[hostname].ansible_default_ipv4.address
}} {{ hostvars[hostname].ansible_host }}

    {%- else %}

{{ hostvars[hostname].ansible_default_ipv4.address }} {{ hostname }}

    {%- endif %}

    {%- for play in playbook %}
    {#- play in playbook #}

      {%- if hostname in lookup('inventory_hostnames', play['hosts']) %}
      {#- host is targetted by play #}

        {%- if 'roles' in play %}
        {#- play is based on roles #}

          {%- for role in play['roles'] %}
          {#- role in play #}

            {%- if role is string %}
              {%- set role_name = role %}
            {%- else %}
              {%- set role_name = role['role'] %}
            {%- endif -%}

            {%- if role_name == 'backup_director' %}
 bacula-dir
            {%- elif role_name == 'backup_storage' %}
 bacula-sd
            {%- elif role_name == 'calendar' %}
 caldav
            {%- elif role_name == 'mail_internal' %}
 smtp
            {%- endif %}

          {#- role in play #}
          {%- endfor %}

        {#- play is based on roles #}
        {%- endif %}

      {#- host is targetted by play #}
      {%- endif %}

    {#- play in playbook #}
    {%- endfor %}

  {#- hostname in target DNS group #}
  {%- endfor %}

{# hosts pattern #}
{% endfor %}
