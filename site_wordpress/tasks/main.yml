- block:

    - name: Create directory to hold site WordPress files
      ansible.builtin.file:
        path: "{{ wordpress_site_path }}"
        state: directory

    - name: Download WordPress files
      ansible.builtin.command:
        cmd: >-
          wp --allow-root --path={{ wordpress_site_path }}
          core download --locale=en_GB
        creates: "{{ wordpress_site_path }}/index.php"

    - name: Create the WordPress config file for local database
      ansible.builtin.command:
        cmd: >-
          wp --allow-root --path={{ wordpress_site_path }}
          config create
          --dbhost=localhost
          --dbname={{ wordpress_site.server_name | regex_replace ('\.', '_') }}
          --dbuser={{ wordpress_site.server_name | regex_replace ('\.', '_') }}
          --dbpass={{ wordpress_site.database_password }}
          --skip-check
        creates: "{{ wordpress_site_path }}/wp-config.php"
      when: wordpress_site.database_host is not defined

    - name: Create the WordPress config file for remote database
      ansible.builtin.command:
        cmd: >-
          wp --allow-root --path={{ wordpress_site_path }}
          config create
          --dbhost={{ wordpress_site.database_host }}
          --dbname={{ wordpress_site.server_name | regex_replace ('\.', '_') }}
          --dbuser={{ wordpress_site.server_name | regex_replace ('\.', '_') }}
          --dbpass={{ wordpress_site.database_password }}
          --skip-check
        creates: "{{ wordpress_site_path }}/wp-config.php"
      when: wordpress_site.database_host is defined

    - name: Deny visibility of WordPress config file to others
      ansible.builtin.file:
        path: "{{ wordpress_site_path }}/wp-config.php"
        mode: u=rw,g=r,o=

    - name: Remove WordPress sample config file
      ansible.builtin.file:
        path: "{{ wordpress_site_path }}/wp-config-sample.php"
        state: absent

    - name: Set correct ownership of all WordPress files
      ansible.builtin.file:
        path: "{{ wordpress_site_path }}"
        owner: www-data
        group: www-data
        recurse: yes
        state: directory

    - name: Install WordPress
      # Note shows changed if WordPress was already installed
      # Can I change it to look first for WordPress installed and skip if it is?
      ansible.builtin.command: >-
        wp --allow-root --path={{ wordpress_site_path }}
        core install
        --url={{ domain_name }}
        --title="{{ domain_organisation }}"
        --admin_user={{ wordpress_admin_user }}
        --admin_password={{ wordpress_admin_password }}
        --admin_email={{ wordpress_admin_email }}

    - name: Activate the wordpress-importer plugin
      ansible.builtin.command: >-
        wp --allow-root --path={{ wordpress_site_path }}
        plugin install wordpress-importer --activate

  become: yes
