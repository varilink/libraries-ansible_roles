# ------------------------------------------------------------------------------
# backup_director/tasks/create-catalog.yml
# ------------------------------------------------------------------------------

---

# Make the Bacula tables in the MariaDB database that hold the catalog for the
# bacula-director service. A scripts is provided by the bacula-director-mysql
# package for this. Once the database has been created and the bacula-director
# service has been correctly configured to access that database, then this
# script can be run from the bacula-director host.

- block:

    - name: Fix syntax error in make_mysql_tables
      # The make_mysql_tables script that is provided with the
      # bacula-director-mysql package in the buster-backports suite has a syntax
      # error as far as the MariaDB version in the mariadb-server package in the
      # buster suite is concerned. So, we must fix that syntax error before we
      # use it.
      ansible.builtin.lineinfile:
        path: /usr/share/bacula-director/make_mysql_tables
        line: '   \`{{ item }}\` INTEGER DEFAULT 0,'
        regexp: '^   \\?`{{ item }}\\?` INTEGER DEFAULT 0,$'
      loop:
        - MinValue
        - MaxValue

    - name: Test if Bacula catalog tables are already present in database
      ansible.builtin.shell: >-
        mysql --skip-column-names --silent
        --user={{ backup_database_user | default('bacula') }}
        --password={{ backup_database_password | default('bacula') }}
        {% if backup_database_host is defined and
              backup_database_host != inventory_hostname
        %}
        --host={{ backup_database_host }}
        {%- endif %}
        bacula -e 'SELECT VersionId FROM Version'
      register: mysql_result
      changed_when: false
      # rc == 0 when the query returns a row and rc == 1 when it doesn't
      failed_when: mysql_result.rc != 0 and mysql_result.rc != 1

    - name: Make Bacula catalog tables
      ansible.builtin.shell: >-
        db_name=bacula /usr/share/bacula-director/make_mysql_tables
        --user={{ backup_database_user | default('bacula') }}
        --password={{ backup_database_password | default('bacula') }}
        {% if backup_database_host is defined %}
        --host={{ backup_database_host }}
        {%- endif %}
      register: make_mysql_tables
      when: mysql_result.rc == 1

  become: yes
