# ------------------------------------------------------------------------------
# database/tasks/site/create.yml
# ------------------------------------------------------------------------------

---

- ansible.builtin.set_fact: "wordpress_site_{{ item.key }}={{ item.value }}"
  loop: >-
    {{
      wordpress_sites | selectattr('subdomain', 'equalto', subdomain) |
      first | dict2items |
      union(
      wordpress_sites_private | selectattr('subdomain', 'equalto', subdomain) |
      first | dict2items)
    }}

- block:

    # TODO: Obfuscate the names of the WordPress site's database and user for
    # "security through obscurity".

    - name: Create database for the WordPress site
      community.mysql.mysql_db:
        # Name the database by substituting '_' for '.' in the site's server
        # name; for example database www_varilink_co_uk for a site with the
        # server name www.varilink.co.uk.
        name: "{{ wordpress_site_server_name | regex_replace ('\\.', '_') }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create a local database user for the WordPress site
      community.mysql.mysql_user:
        name: "{{ wordpress_site_server_name | regex_replace ('\\.', '_') }}"
        # Name the user that the WordPress site will use to access the database
        # in the same way that we named the database in the previous task.
        password: "{{ wordpress_site_database_password }}"
        priv: "\
          {{ wordpress_site_server_name | regex_replace ('\\.', '_') }}.*:ALL"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      # This WordPress site will be co-hosted with its database. We know this
      # because there is no database host configured for the WordPress site.
      when: wordpress_site_database_host is not defined

    - name: Create a remote database user for the WordPress site
      community.mysql.mysql_user:
        name: "{{ wordpress_site_server_name | regex_replace ('\\.', '_') }}"
        # host value needed since connection to the database is remote
        host: "{{ wordpress_site_database_host }}"
        password: "{{ wordpress_site_database_password }}"
        priv: "\
          {{ wordpress_site_server_name | regex_replace ('\\.', '_') }}.*:ALL"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      # This WordPress site will be hosted separately from ts database. We know
      # this because there is a database host configured for the WordPress site.
      when: wordpress_site_database_host is defined

  become: yes
  vars:
    wordpress_site_server_name: "\
      {{ wordpress_site_subdomain }}.{{ domain_name }}"
