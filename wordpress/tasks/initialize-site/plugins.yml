- name: Find the currently installed WordPress plugins for this site
  ansible.builtin.command: >-
    wp --path={{ wordpress_site_path }}
    plugin list --format=json
  changed_when: False
  register: wp_plugin_list

- set_fact:
    installed_plugins: "{{ wp_plugin_list.stdout | from_json }}"

- set_fact:
    installed_plugin_names: |-
      {{ installed_plugins | map(attribute='name') }}
    required_plugin_names: |-
      {{ wordpress_site_plugins | map(attribute='name') }}

- name: Uninstall (and deactivate if necessary) unneeded WordPress plugins
  ansible.builtin.command: >-
    wp --path={{ wordpress_site_path }}
    plugin uninstall {{ item }} --deactivate
  loop: |-
    {{ installed_plugin_names | difference(required_plugin_names) }}

- name: Install and activate needed WordPress plugins not yet installed
  ansible.builtin.command: >-
    wp --path={{ wordpress_site_path }}
    plugin install {{ required.name }}
    {% if plugin.version is defined %}
    --version={{ required.version }}
    {% endif %}
    --activate
  vars:
    required: >-
      {{
        wordpress_site_plugins | selectattr('name', 'equalto', item)
        | first
      }}
  loop: >-
    {{ required_plugin_names | difference(installed_plugin_names) }}

- ansible.builtin.include_tasks: "./inc/update-plugin.yml"
  vars:
    installed: >-
      {{
        installed_plugins | selectattr('name', 'equalto', item)
        | first
      }}
    required: >-
      {{
        wordpress_site_plugins | selectattr('name', 'equalto', item)
        | first
      }}
  loop: >-
    {{ required_plugin_names | intersect(installed_plugin_names) }}
