# ------------------------------------------------------------------------------
# wordpress/tasks/set-site-facts.yml
# ------------------------------------------------------------------------------

# Set some facts for the WordPress site we are acting upon, over and above any
# that are set via group_vars and host_vars.

---

- block:

    # There is more than one WordPress site for the project's domain on the host
    # that we are targetting. We know this because an associative array called
    # wp_sites is defined with keys that correspond to the subdomains of each of
    # those WordPress sites; for example 'www', 'test', etc.

    # When this is the case the playbook prompts for the variable wp_subdomain,
    # so that the subdomain to target can be specified. Build variables for the
    # WordPress site by extracting them from wp_sites for the chosen
    # wp_subdomain.

    # When wp_sites is not defined, the equivalent variables have been directly
    # set via group_vars and host_vars.

    - name: >-
        Set facts from the elements of the wp_sites array for the selected
        wp_subdomain

      ansible.builtin.set_fact: "wp_{{ item.key }}={{ item.value }}"
      loop: "{{ wp_sites[ wp_subdomain ] | dict2items }}"

  when: wp_sites is defined

# Set a few extra convenience facts for the WordPress site, whose values are
# derived from some of facts for the WordPress site that are already set.

- name: Set the wp_server_name fact 
  ansible.builtin.set_fact:
    wp_server_name: "{{ wp_subdomain }}.{{ domain_name }}"

- name: Set the wp_database_name fact
  ansible.builtin.set_fact:
    wp_database_name: "{{ wp_server_name | regex_replace ('\\.', '_') }}"

- name: Set the wp_path fact
  ansible.builtin.set_fact:
    wp_path: /var/www/{{ wp_server_name }}/html
